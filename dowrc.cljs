(load stata)
(menu "dow" ["do" :do "keep" acorn "wrap up" :wrap-up "plan" context "review" :review])
(menu :do "focus" flow)
(menu :wrap-up "status report" ["all code (%)" stata "your code (%)" stata/authored "cloned code (%)" stata/cloned])
(def root "~/leak/.tnt/dow")
(def browser "luakit")
(def git-dirs ["~/leak/*" "~/goldfeld/*" "~/szpilman/*" "~/.vim/bundle/*" "~/longstorm/*" "~/inkspree/*" "~/void/*"])
(def project-types [:git :clojure :nodejs])
(bind :c :exec "hooker 1")
(bind :t :exec "hooker 3")
(bind :r :exec "hooker 9")
(bind :s :go stata)
(bind :p :go context)
(bind :a :go acorn)
(bind :q :exec "hooker 5")
(flow :two-track [["projects" [1 2 3 5 :min] :exec "hooker 5"] ["job" [1 3 4 6 :min] :exec "hooker 9"] ["catchup" [:.. 1 :min] :exec "hooker 7"] ["break" [:.. 4 :min] :exec "hooker 11 && hooker 33"]])
(flow :three-track [["gamedev" [2 2 3 :min] :exec "hooker 5"] ["projects" [2 2 3 :min] :exec "hooker 9"] ["job" [2 4 5 :min] :exec "hooker 1"] ["catchup" [:.. 2 :min] :exec "hooker 7"] ["break" [:.. 3 :min] :exec "hooker 11 && hooker 33"]])
(flow :big-project [["new code" [1 2 3 3 :min] :exec "hooker 5"] ["triage and fix issues" [1 2 3 3 :min] {:on-start [:exec "hooker 9"] :alert [:exec "mplayer "]}] ["write docstrings and articles/press-releases" [1 2 3 3 :min] :exec "hooker 1"] ["break" [:.. 3 :min] :exec "hooker 11 && hooker 33"]])
(flow :try [["gamedev" [7 7 7 :s] :exec "hooker 5"] ["projects" [7 7 7 :s] :exec "hooker 9"] ["job" [7 7 7 :s] :exec "hooker 1"] ["catchup" [:.. 7 :s] :exec "hooker 7"] ["break" [:.. 7 :s] :exec "hooker 11 && hooker 33"]])
